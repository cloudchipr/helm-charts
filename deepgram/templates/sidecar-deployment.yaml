
{{- if eq .Values.engine.mode "sidecar" | required "Engine mode is required: engine.mode=deplyoment/sidecar" }}
{{ $imageApi := ((printf "%s/%s:%s" (default "quay.io" .Values.api.imageRegistry ) (default "deepgram/self-hosted-engine" .Values.api.imageRepository ) (default "release-240927" .Values.api.imageTag )) | quote) }}
{{ $imageEngine := ((printf "%s/%s:%s" (default "quay.io" .Values.engine.imageRegistry ) (default "deepgram/self-hosted-engine" .Values.engine.imageRepository ) (default "release-240927" .Values.engine.imageTag )) | quote) }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ default (printf "%s-engine-api" .Release.Name) }}
  namespace: {{ include "namespace" . }}
  labels:
  {{- include "labelsSidecar" . | nindent 4 }}
  {{- if .Values.api.labels }}
    {{- toYaml .Values.api.labels | nindent 4 }}
  {{- end }}
    app.kubernetes.io/component: {{ (.Values.api.name | default (printf "%s-engine-api" .Release.Name)) }}
    app: {{ (.Values.api.name | default (printf "%s-engine-api" .Release.Name)) }}
  {{- if .Values.api.annotations }}
  annotations:
    {{- toYaml .Values.api.annotations | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: {{ default (printf "%s-engine-api" .Release.Name) }}
  replicas: {{ .Values.api.replicaCount |default 1 }}
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
      {{- include "selectorLabelsSidecar" . | nindent 8 }}
      {{- if .Values.api.labels }}
        {{- toYaml .Values.api.labels | nindent 8 }}
      {{- end }}
        app.kubernetes.io/component: {{ default (printf "%s-engine-api" .Release.Name) }}
        app: {{  default (printf "%s-engine-api" .Release.Name) }}
      {{- if .Values.api.podAnnotations }}
      annotations:
        {{- toYaml .Values.api.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 300 }}
      automountServiceAccountToken: {{ .Values.api.automountServiceAccountToken |default "false" }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ .Values.serviceAccount.name | default (printf "%s-sa" .Release.Name) }}
      {{- else if .Values.serviceAccount.useExisting }}
      serviceAccountName: {{ .Values.serviceAccount.useExisting }}
      {{- else }}
      serviceAccountName: "default"
      {{- end }}
      {{- with .Values.api.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - image: {{ $imageApi }}
        name: {{ (printf "%s-api" .Release.Name) }}
        {{- if .Values.api.containerLifeCycle }}
        lifecycle:
        {{- toYaml .Values.api.containerLifeCycle | nindent 8 }}
        {{- else }}
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 290 && kill -2 1"]
        {{- end }}
        imagePullPolicy: {{ default "Always" .Values.imagePullPolicy | quote }}
        {{- if .Values.api.command }}
        command:
          {{- toYaml . | nindent 10 }}
        {{- else }}
        command: [ "stem" ]
        {{- end}}
        {{- if .Values.api.args }}
        args:
          {{- toYaml . | nindent 10 }}
        {{- else }}
        args: ["-v", "serve", "/etc/config/api.toml"]
        {{- end }}
        {{- if .Values.api.readinessProbe }}
        readinessProbe:
          {{- toYaml .Values.api.readinessProbe | nindent 10 }}
        {{ else }}
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --silent --insecure http://localhost:{{ .Values.api.serverPort | default 8080 }}/v1/status/engine | grep --quiet -e '^{\"engine_connection_status\"\:\"Connected\".*}$'
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
        {{- end }}
        {{- if .Values.api.livenessProbe }}
        livenessProbe:
          {{- toYaml .Values.api.livenessProbe | nindent 10 }}
        {{ else }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.api.serverPort | default 8080 }}
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
        {{- end }}
        {{- with .Values.api.containerSecurityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        ports:
          - name: primary
            containerPort: {{ .Values.api.serverPort | default 8080 }}
        {{- with .Values.api.env }}
        env:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.api.envFrom }}
        envFrom:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .Values.api.resources }}
        resources:
          {{- toYaml .Values.api.resources | nindent 12 }}
        {{- else }}
        resources:
          requests:
            memory: "4Gi"
            cpu: "2000m"
          limits:
            memory: "8Gi"
            cpu: "4000m"
        {{- end }}
        volumeMounts:
          - name: api-config-volume
            mountPath: /etc/config
      - image: {{ $imageEngine }}
        name: {{ (printf "%s-engine" .Release.Name) }}
        {{- if .Values.engine.containerLifeCycle }}
        lifecycle:
        {{- toYaml .Values.engine.containerLifeCycle | nindent 8 }}
        {{- else }}
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 290 && kill -2 1"]
        {{- end }}
        imagePullPolicy: {{ default "Always" .Values.imagePullPolicy | quote }}
        {{- if .Values.engine.command }}
        command:
          {{- toYaml . | nindent 10 }}
        {{- else }}
        command: [ "impeller" ]
        {{- end}}
        {{- if .Values.engine.args }}
        args:
          {{- toYaml . | nindent 10 }}
        {{- else }}
        args: ["-v", "serve", "/etc/config/engine.toml"]
        {{- end }}
        {{- if .Values.engine.startupProbe }}
        startupProbe:
          {{- toYaml .Values.engine.startupProbe | nindent 10 }}
        {{ else }}
        startupProbe:
          tcpSocket:
            port: {{ .Values.engine.serverPort | default 9090 }}
          periodSeconds: 10
          failureThreshold: 60
        {{- end }}
        {{- if .Values.engine.readinessProbe }}
        readinessProbe:
          {{- toYaml .Values.engine.readinessProbe | nindent 10 }}
        {{ else }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.engine.serverPort | default 9090 }}
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 1
        {{- end }}
        {{- if .Values.engine.livenessProbe }}
        livenessProbe:
          {{- toYaml .Values.engine.livenessProbe | nindent 10 }}
        {{ else }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.engine.serverPort | default 9090 }}
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        {{- end }}
        {{- with .Values.engine.containerSecurityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        ports:
          - name: engine
            containerPort: {{ .Values.engine.serverPort | default 9090 }}
          - name: engine-metrics
            containerPort: {{ .Values.engine.metricsPort | default 9991 }}
        volumeMounts:
          - name: engine-config-volume
            mountPath: /etc/config
          - name: models-volume
            mountPath: /models
        {{- with .Values.engine.env }}
        env:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.engine.envFrom }}
        envFrom:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .Values.engine.resources }}
        resources:
          {{- toYaml .Values.engine.resources | nindent 12 }}
        {{- else }}
        resources:
          requests:
            memory: "30Gi"
            cpu: "4000m"
            nvidia.com/gpu: 1
          limits:
            memory: "40Gi"
            cpu: "8000m"
            nvidia.com/gpu: 1
        {{- end }}
      volumes:
        - name: api-config-volume
          configMap:
            name: {{ (printf "%s-api-config" .Release.Name) }}
        - name: engine-config-volume
          configMap:
            name: {{ (printf "%s-engine-config" .Release.Name) }}
      {{- if .Values.persistance.enabled }}
        - name: models-volume
          persistentVolumeClaim:
            claimName: {{ .Values.persistance.existingClaimName | default (.Values.persistance.name | default (printf "%s-models-pvc" .Release.Name)) }}
      {{- else }}
        - name: models-volume
          emptyDir:
            sizeLimit: 10Gi
      {{- end }}
{{- end -}}
{{/*
*/}}
